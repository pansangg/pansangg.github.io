(async () => {
    if (typeof jQuery === 'undefined') {
      await import('https://cdn.jsdelivr.net/jquery/latest/jquery.min.js');
    }

    $(document).ready(function() {
      $('#buttons').load('buttons.html');
      $('#webring').load('webring.html');
      $('#musles').load('musles.html');
    });
  })();

function randInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

// function adjustedSize(size) {
//     const scale = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--global-scale'));
//     console.log(scale)
//     return size * scale;
// }

function isMobile() {
  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    return true;
  }
  return false;
}

const splashes = [
    "dont try meex.lol at all cost",
    "post this –º—è—É-–º—è—É every week",
    "–≤–∏–≤–æ —Ö200 –ø—Ä–æ –≤ —Å–æ–ª–æ",
    "–Ø –•–õ–ï–ë –†–û–í–ù–û –û–¢–†–ï–ó–ê–õ",
    "welcome to my site",
    "–Ω–∞ –∞–π—Ñ–æ–Ω –¥–µ–Ω–µ–≥ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ",
    "–ø—É–∫ –ø—É–∫ —è –ø—Ä—ë–Ω—É–ª–ª‚ò†Ô∏è‚ò†Ô∏è",
    "–Ω–µ –Ω—É —ç—Ç–∞ –ø–∞—Ç–øi—Å–æ–Ω",
    "–∑–∞–≤—Ç—Ä–∞ –≤ 3",
    "–ø–∞—Ö–∞–Ω –∫–æ–≥–¥–∞ —Ä–∞–∑–±–∞–Ω –Ω–∞ –∫—É–±–µ—Ä–µ",
    "—É–¥–∞–ª–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä",
    "maybe try amirtini.github.io",
    "also try camp3rcraft.github.io",
    "–∏–Ω—Ç –º–µ–π–Ω –≥–æ–≤–Ω—é–∫",
    "–¥–∞–π—Ç–µ –º–Ω–µ –¥–µ–Ω–µ–≥",
    "—á—Ç–æ —Ç—É—Ç –ø–∏—Å–∞—Ç—å?",
    "best viewed on PC",
    "–ø–∞—Ä–∞–ª–µ–ª–ª–æ–≥—Ä–∞–º‚ò†Ô∏è",
    "–ø–æ—à–ª–∏ –≤ —Ä–∞–Ω–¥–æ–º —Ä–∞—à",
    "—ç—Ç–æ —Å–ø–ª–µ—à",
    "i am steve üó£Ô∏èüó£Ô∏è",
    "–∞–ª–µ –æ–ø —Å–º–æ—Ç—Ä–∏",
    "–¥–∞ –Ω—É –Ω–µ –≤–µ—Ä—é",
    "–∫–µ–º–ø–µ—Ä –Ω–µ –¥–∞—ë—Ç –∏–¥–µ–∏ –¥–ª—è —Å–ø–ª–µ—à–µ–π",
    "—á–µ–ª —É —Ç–µ–±—è –æ—á–µ–ø–∞—Ç–∫–∞ –≤ —Å–ø–µ–ª—à–µ ü§ì",
    "pansan was here",
    "üöΩüí®üí®üí®üí•",
    "–ù–∞–ø–∏—à–∏ —Ç–∞–º —Ç–∏–ø–æ —è —Å–∫–º–±–∏–¥–∏ —Ç–æ–º–∏–ª–µ—Ç",
    "—Ä–æ–±–æ—Ç —Å–æ—á–∏–Ω–∏—Ç —Å–∏–º—Ñ–æ–Ω–∏—é?",
    "–∞–π –ª–µ–≤ –∞–π —Ç–∏–≥—Ä",
    "–°–õ–ê–í–ê –ë–û–ì–£ APPLE üôèüèºüçé",
    "—Å –Ω–æ–≤–æ–π –≥–æ–¥–æ–π",
    "–ì–û–ô–î–ê–ê–ê–ê",
    "V ORDINATORSKUYU?!!",
    "—Å–∞–π—Ç –Ω–∞–≥—Ä—É–∂–µ–Ω –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π",
    "–≥–æ –±—É–∫–≤–∏—Ç—å",
    "–Ω—É –≤–æ—Ç —ç—Ç–æ –≤–æ—Ç",
    "–í–æ–≤–∞ 5—à: –≥–æ –≤ –º–∞–π–Ω",
    "–≥–æ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç",
    "+ –≤ –ø–∞–ø–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–µ–º–æ–≤",
    "–∑–∞—Ö–æ–¥–∏—Ç–µ –Ω–∞ –∫—Ä—É–≥–µ—Ä",
    "open ze dor",
    "—Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–∫–æ—Ñ–æ–Ωüí•",
    "tomate paste",
    "bombordiro crocodilo",
    "tralalero tralala",
    "üçê–±–æ–º –±–æ–º",
    "–∞–π—Ñ–æ–Ω 5 ASS",
    "—á–µ—Ä—Ä–∏–øi–∫ —á–µ—Ä–µ–ø–æiküíÄ‚ò†Ô∏è",
    "reacted to your message ü¶Ñ",
    "üõêüí®üí®üí®üí®üí®üí•",
    "bombombini gusini",
    "crocodildo penisini",
    "—Å–∞–π—Ç –ø–æ—Å–≤—è—â—ë–Ω –º–Ω–µ",
    "–£ –í–ê–° –û–ô–§–û–ù??",
    "—à—Ç–æ –≤—ã –≥–∞–≤–∞—Ä–∏—Ç–µ",
    "dom content loaded",
    "* {display: none}",
    "—Å–µ–π—á–∞—Å 1:01",
    "–∑–∞—Ö–∞—Ä –∫—Ä–∞–º–±–ª –∫—É–∫–∏",
    "–∫—Ä–∞–º–±–ª –∫—É–∫–∏ –∑–∞—Ö–∞—Ä",
    "–∑–∞—Ö–∞—Ä –∂–¥—ë—Ç –∫–æ–∫–æ—Å",
    "–∫–ª—è–Ω–∏—Å—å",
    "made on windows",
    "made on pc",
    "made on earth",
    "made in russia"
];

document.addEventListener('DOMContentLoaded', function() {
    function pageBoom() {
        gif = document.querySelector(".boomgif");

        gif.src = "";
        gif.src = "img/boom.gif";

        gif.classList.remove("hiddengif");

        setTimeout(() => {
          location.reload();
          gif.src = ""
        }, 1800);

        let boomSound = new Audio('audio/boom.mp3');
        boomSound.preload = "auto";
        boomSound.play();
    }

    const dash = document.querySelector('.dash');
    const navbar = document.querySelector('.navbar');

    dash.addEventListener('mouseover', () => {
        navbar.style.boxShadow = '0px 0px 20px #ffffff';
    });

    dash.addEventListener('mouseout', () => {
        navbar.style.boxShadow = '0px 0px 5px #ffffff';
    });

    let meowaudio = new Audio('audio/meowmeow.mp3');
    meowaudio.preload = "auto";
    const meowmeow = document.getElementById("meowmeow")
    meowmeow.addEventListener('click', () => {
      if (!meowaudio.paused) {
        meowaudio.pause();
        meowaudio.currentTime = 0;
      }
      meowaudio.play();
    });

    let preload1 = new Audio("audio/hit1.mp3");
    let preload2 = new Audio("audio/hit2.mp3");
    let preload3 = new Audio("audio/hit3.mp3");
    let preload4 = new Audio("audio/hit4.mp3");
    preload1.preload = "auto";
    preload2.preload = "auto";
    preload3.preload = "auto";
    preload4.preload = "auto";
    const avatar = document.querySelector(".avatar")
    avatar.addEventListener('click', () => {
      let avataraudio = new Audio();
      avataraudio.preload = "auto";
      avataraudio.src = "audio/hit"+randInt(1,4)+".mp3";
      avataraudio.volume = 0.5;
      avataraudio.play();
    });

    const rareSplash = Math.random() < 0.01
    const splash = document.querySelector(".splash");

    if (rareSplash) {
      splash.classList.add("rainbow-splash");
      splash.textContent = "—Å–∞–º—ã–π —Ä–µ–¥–∫–∏–π —Å–ø–ª–µ—à";
    } else {
      splash.textContent = splashes[Math.floor(Math.random() * splashes.length)];
    }

    let avatarClickCount = 0;

    // —Å–Ω–∏–∑—É —á–∞—Å—Ç–∏—Ü—ã –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
    const emojis = ['üí•', 'üî•', 'üí®', 'üöΩ', '‚ò†Ô∏è', '‚ô•Ô∏è', 'üß†', 'ü™ë', 'ü™ô', 'üçó', 'üèÄ', 'üçã', 'ü••', 'üçï', 'üçé', 'üé∫', 'üîî', 'üå∂Ô∏è', 'üç´', 'üçå', 'üöó', 'üé©', '‚úÖ', 'üëÜ', '‚ú®', 'üß®', 'üíé', 'üéÆ', 'üé≤', 'üîí', 'ü™ì', 'üî™', 'üí∏', 'üìå', 'üçî', 'ü•®', 'üç≠', 'üç∫', 'üçí', 'ü•ë', 'üí¢', '‚òÇÔ∏è', 'üå°Ô∏è'];
    const clickable = document.querySelector(".avatar")
    const viewportHeight = window.innerHeight;
    clickable.addEventListener('click', (event) => {
      if (avatarClickCount > 90) {
        avatar.src = "img/angry_avatar.png";
      }
      if (avatarClickCount > 100) {
        pageBoom();
      }
      const particlesCount = randInt(2, 7); // —Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–∏—Ü —Å–æ–∑–¥–∞—ë–º
      avatarClickCount++

      for (let i = 0; i < particlesCount; i++) {
        createParticle(event.clientX, event.clientY);
      }
    });

    function createParticle(x, y) {
      const particle = document.createElement('div');
      particle.classList.add('particle');
      particle.textContent = emojis[Math.floor(Math.random() * emojis.length)];

      if (isMobile()) {
        x *= 2;
        y *= 2;
      }
      // –Ω–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —á–∞—Å—Ç–∏—Ü—ã
      particle.style.left = x + 'px';
      particle.style.top = y + 'px';

      document.body.appendChild(particle);

      const angle = Math.random() * 2 * Math.PI; // —É–≥–æ–ª –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
      const speed = Math.random() * 150 + 150;  // –Ω–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ (px/s)
      const duration = 2000 + Math.random() * 1000; // –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ (–º—Å)

      // –ù–∞—á–∞–ª—å–Ω—ã–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ –æ—Å—è–º X –∏ Y
      let velocityX = Math.cos(angle) * speed;
      // –ó–∞–¥–∞—ë–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é –Ω–∞—á–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ Y, —á—Ç–æ–±—ã —á–∞—Å—Ç–∏—Ü—ã –ø–æ–¥–ª–µ—Ç–∞–ª–∏ –≤–≤–µ—Ä—Ö
      let velocityY = -(Math.random() * 200 + 250); // –æ—Ç -250 –¥–æ -450 px/s (–≤–≤–µ—Ä—Ö)

      const gravity = 800; // —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏ (px/s¬≤)

      // –ù–∞—á–∞–ª—å–Ω—ã–π —É–≥–æ–ª –≤—Ä–∞—â–µ–Ω–∏—è –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è (–≥—Ä–∞–¥—É—Å—ã –≤ —Å–µ–∫—É–Ω–¥—É)
      let rotation = 0;
      const rotationSpeed = (Math.random() * 360 + 90) * (Math.random() < 0.5 ? 1 : -1);

      const startTime = performance.now();

      function animate(time) {
        const elapsed = (time - startTime) / 1000; // –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        if (elapsed * 1000 > duration) {
          particle.remove();
          return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ Y —Å —É—á—ë—Ç–æ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏
        velocityY += gravity * (1 / 60); // –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä

        // –°–º–µ—â–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã —Å —É—á—ë—Ç–æ–º —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –≤—Ä–µ–º–µ–Ω–∏
        const dx = velocityX * elapsed;
        const dy = velocityY * elapsed;

        // –û–±–Ω–æ–≤–ª—è–µ–º —É–≥–æ–ª –≤—Ä–∞—â–µ–Ω–∏—è
        rotation += rotationSpeed * (1 / 60);

        // –ü–ª–∞–≤–Ω–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
        const opacity = 1 - elapsed / (duration / 1000);
        const rect = particle.getBoundingClientRect();
        particle.style.transform = `translate(${dx}px, ${dy}px) rotate(${rotation}deg)`;
        particle.style.opacity = opacity;

        console.log(rect.top, viewportHeight-1)

        if (rect.top > viewportHeight) {
          console.log("bom bom")
          particle.style.display = 'none';
        } else {
          particle.style.display = '';
          console.log("ponnn")
          requestAnimationFrame(animate);
        }
      }
      const rect = particle.getBoundingClientRect();
      if (rect.top > viewportHeight-1) {
        console.log("bom bom")
        particle.style.display = 'none';
      } else {
        particle.style.display = '';
        console.log("ponnn2")
        requestAnimationFrame(animate);
      }
    }

    let lastUpdate = "";
    fetch('https://api.github.com/repos/pansangg/pansangg.github.io')
      .then(response => response.json())
      .then(data => {
        const lastUpdateText = document.querySelector(".last-update");

        const rawLastUpdateDate = new Date(data.pushed_at);
        const formattedDate = rawLastUpdateDate.toLocaleDateString('ru-RU', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
          hour: 'numeric',
          minute: 'numeric',
          second: 'numeric'
        });
        console.log(formattedDate)
        lastUpdate = "–ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞:<br>"+formattedDate
        lastUpdateText.innerHTML = lastUpdate;
    })
});